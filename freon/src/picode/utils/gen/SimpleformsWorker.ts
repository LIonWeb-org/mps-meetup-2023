// Generated by the Freon Language Generator.
import { Form, IntType, ItemGroup, MainModel, SimpleItem, StringType, Type } from "../../language/gen";

/**
 * Interface SimpleformsWorker implements the extended visitor pattern of instances of language simpleforms.
 * Class SimpleformsWalker implements the traversal of the model tree, classes that implement this interface
 * are responsible for the actual work being done on the nodes of the tree.
 * Every node is visited twice, once before the visit of its children, and once after this visit.
 */
export interface SimpleformsWorker {
    execBeforeMainModel(modelelement: MainModel): boolean;
    execAfterMainModel(modelelement: MainModel): boolean;

    execBeforeForm(modelelement: Form): boolean;
    execAfterForm(modelelement: Form): boolean;

    execBeforeItemGroup(modelelement: ItemGroup): boolean;
    execAfterItemGroup(modelelement: ItemGroup): boolean;

    execBeforeSimpleItem(modelelement: SimpleItem): boolean;
    execAfterSimpleItem(modelelement: SimpleItem): boolean;

    execBeforeType(modelelement: Type): boolean;
    execAfterType(modelelement: Type): boolean;

    execBeforeStringType(modelelement: StringType): boolean;
    execAfterStringType(modelelement: StringType): boolean;

    execBeforeIntType(modelelement: IntType): boolean;
    execAfterIntType(modelelement: IntType): boolean;
}
